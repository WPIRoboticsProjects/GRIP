# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  - master

jobs:
  - job: Linux
    pool:
      vmImage: 'Ubuntu 16.04'

    steps:
      - script: |
          sudo add-apt-repository -y ppa:webupd8team/java
          sudo apt-get update
          echo debconf shared/accepted-oracle-license-v1-1 select true | sudo debconf-set-selections
          echo debconf shared/accepted-oracle-license-v1-1 seen true | sudo debconf-set-selections
          sudo apt-get install -y oracle-java8-installer
          sudo apt-get install -y oracle-java8-set-default
          export JAVA_HOME=/usr/lib/jvm/java-8-oracle
          export PATH=$JAVA_HOME/bin:$PATH
        displayName: 'Install Oracle JDK'
      - task: Gradle@2
        inputs:
          workingDirectory: ''
          gradleWrapperFile: 'gradlew'
          gradleOptions: '-Xmx3072m -Dorg.gradle.java.home=/usr/lib/jvm/java-8-oracle'
          jdkUserInputPath: '/usr/lib/jvm/java-8-oracle'
          publishJUnitResults: false
          tasks: 'check jacocoTestReport jacocoRootReport jfxNative -Pgeneration -PjniLocation=build/OpenCVJNI -Pheadless=true -PlogTests --stacktrace'

      - script: |
          curl -s https://codecov.io/bash > .codecov
          chmod +x .codecov
          ./.codecov -t $(CODECOV_TOKEN)
        displayName: 'Upload jacoco reports to codecov'

      - task: CopyFiles@2
        inputs:
          contents: 'ui/build/jfx/native/GRIP-*.deb'
          targetFolder: $(Build.ArtifactStagingDirectory)

      - task: PublishBuildArtifacts@1
        inputs:
          artifactName: 'LinuxInstaller'

  - job: Windows_64_Bit
    pool:
      vmImage: 'vs2017-win2016'

    steps:
      - script: |
          choco install innosetup -y
        displayName: 'Install Inno Setup'
      - task: Gradle@2
        inputs:
          workingDirectory: ''
          gradleWrapperFile: 'gradlew'
          gradleOptions: '-Xmx3072m'
          jdkVersionOption: '1.8'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: true
          tasks: 'check jacocoTestReport jacocoRootReport jfxNative -Pheadless=true -Pgeneration -PlogTests --stacktrace'

      - task: CopyFiles@2
        inputs:
          contents: 'ui\build\jfx\native\GRIP-*.exe'
          targetFolder: $(Build.ArtifactStagingDirectory)

      - task: PublishBuildArtifacts@1
        inputs:
          artifactName: 'Win64Installer'

  - job: Windows_32_Bit
    pool:
      vmImage: 'vs2017-win2016'

    steps:
      - script: |
          choco install innosetup -y
        displayName: 'Install Inno Setup'
      - task: Gradle@2
        inputs:
          workingDirectory: ''
          gradleWrapperFile: 'gradlew'
          gradleOptions: '-Xmx1024m'
          jdkVersionOption: '1.8'
          jdkArchitectureOption: 'x86'
          publishJUnitResults: false
          tasks: 'check jacocoTestReport jacocoRootReport jfxNative -Pheadless=true -Pgeneration -PlogTests --stacktrace'

      - task: CopyFiles@2
        inputs:
          contents: 'ui\build\jfx\native\GRIP-*.exe'
          targetFolder: $(Build.ArtifactStagingDirectory)

      - task: PublishBuildArtifacts@1
        inputs:
          artifactName: 'Win32Installer'

  - job: Mac
    pool:
      vmImage: 'xcode9-macos10.13'

    steps:
      - task: Gradle@2
        inputs:
          workingDirectory: ''
          gradleWrapperFile: 'gradlew'
          gradleOptions: '-Xmx3072m'
          jdkVersionOption: '1.8'
          jdkArchitectureOption: 'x64'
          publishJUnitResults: false
          tasks: 'check jacocoTestReport jacocoRootReport jfxNative -Pheadless=true -Pgeneration -PlogTests --stacktrace'

      - task: CopyFiles@2
        inputs:
          contents: 'ui/build/jfx/native/*'
          targetFolder: $(Build.ArtifactStagingDirectory)

      - task: PublishBuildArtifacts@1
        inputs:
          artifactName: 'MacInstaller'
